# SPDX-License-Identifier: GPL-2.0-or-later

# script for HC32F460 series, based on the stm32f4x family script

#
# HC32F460 devices support both JTAG and SWD transports.
#
source [find target/swj-dp.tcl]
source [find mem_helper.tcl]

set _CPUTAPID 0x24770011

swj_newdap hc32f460 cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
dap create hc32f460.dap -chain-position hc32f460.cpu

if {[using_jtag]} {
   jtag newtap hc32f460 bs -irlen 5
}

set _TARGETNAME hc32f460.cpu
target create $_TARGETNAME cortex_m -endian little -dap hc32f460.dap

# configure RAM area
$_TARGETNAME configure -work-area-phys 0x1FFF8000 -work-area-size 0x2EFFF -work-area-backup 0

# configure FLASH memory, assuming 512K of flash
#set _FLASHNAME hc32f460.flash
#flash bank $_FLASHNAME cortex_m4 0x00000000 0x0007FFFF 0 0 $_TARGETNAME



# JTAG speed should be <= F_CPU/6. F_CPU after reset is 16MHz, so use F_JTAG = 2MHz
#
# Since we may be running of an RC oscilator, we crank down the speed a
# bit more to be on the safe side. Perhaps superstition, but if are
# running off a crystal, we can run closer to the limit. Note
# that there can be a pretty wide band where things are more or less stable.
adapter speed 2000

adapter srst delay 100
if {[using_jtag]} {
 jtag_ntrst_delay 100
}

reset_config srst_nogate

if {![using_hla]} {
   # if srst is not fitted use SYSRESETREQ to
   # perform a soft reset
   cortex_m reset_config sysresetreq
}

$_TARGETNAME configure -event reset-start {
	# Reduce speed since CPU speed will slow down to 16MHz with the reset
	adapter speed 2000
}
